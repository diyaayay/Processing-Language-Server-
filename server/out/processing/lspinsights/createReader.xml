<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>createReader()</name>

<category>Input</category>

<subcategory>Files</subcategory>

<type></type>

<example>
<image></image>
<code><![CDATA[
void setup() {
  size(100, 100);
  parseFile();
}

void parseFile() {
  // Open the file from the createWriter() example
  BufferedReader reader = createReader("positions.txt");
  String line = null;
  try {
    while ((line = reader.readLine()) != null) {
      String[] pieces = split(line, TAB);
      int x = int(pieces[0]);
      int y = int(pieces[1]);
      point(x, y);
    }
    reader.close();
  } catch (IOException e) {
    e.printStackTrace();
  }
} 
]]></code>
</example>

<description><![CDATA[
Creates a <b>BufferedReader</b> object that can be used to read files line-by-line as individual <b>String</b> objects. This is the complement to the <b>createWriter()</b> function. For more information about the <b>BufferedReader</b> class and its methods like <b>readLine()</b> and <b>close</b> used in the above example, please consult a Java reference.<br />
<br />
Starting with Processing release 0134, all files loaded and saved by the Processing API use UTF-8 encoding. In previous releases, the default encoding for your platform was used, which causes problems when files are moved to other platforms.
]]></description>

</root>
